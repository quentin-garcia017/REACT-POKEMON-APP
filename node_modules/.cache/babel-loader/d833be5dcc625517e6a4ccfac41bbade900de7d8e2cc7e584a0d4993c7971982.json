{"ast":null,"code":"var _jsxFileName = \"/var/www/html/REACT-POKEMONS-APP/src/components/pokemon-card.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./pokemon-card.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PokemonCard = ({\n  pokemon,\n  borderColor = \"#009688\"\n}) => {\n  _s();\n  const [color, setColor] = useState();\n  const showBorder = () => {\n    setColor(borderColor);\n  };\n  const hideBorder = () => {\n    setColor(\"#f5f5f5\");\n  };\n  const formatDate = date => {\n    return `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;\n  };\n  const formatType = type => {\n    let color;\n    switch (type) {\n      case \"Feu\":\n        color = \"red lighten-1\";\n        break;\n      case \"Eau\":\n        color = \"blue lighten-1\";\n        break;\n      case \"Plante\":\n        color = \"green lighten-1\";\n        break;\n      case \"Insecte\":\n        color = \"brown lighten-1\";\n        break;\n      case \"Normal\":\n        color = \"grey lighten-3\";\n        break;\n      case \"Vol\":\n        color = \"blue lighten-3\";\n        break;\n      case \"Poison\":\n        color = \"deep-purple accent-1\";\n        break;\n      case \"Fée\":\n        color = \"pink lighten-4\";\n        break;\n      case \"Psy\":\n        color = \"deep-purple darken-2\";\n        break;\n      case \"Electrik\":\n        color = \"lime accent-1\";\n        break;\n      case \"Combat\":\n        color = \"deep-orange\";\n        break;\n      default:\n        color = \"grey\";\n        break;\n    }\n    return `chip ${color}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col s6 m4\",\n    onMouseEnter: showBorder,\n    onMouseLeave: hideBorder,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card horizontal\",\n      style: {\n        borderColor: color\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: pokemon.picture,\n          alt: pokemon.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-stacked\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: pokemon.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"small\", {\n              children: formatDate(pokemon.created)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), pokemon.types.map(type => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: formatType(type),\n            children: type\n          }, type, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(PokemonCard, \"82MkoYdCpCBLe6G9QQs4gyc+awE=\");\n_c = PokemonCard;\nexport default PokemonCard;\nvar _c;\n$RefreshReg$(_c, \"PokemonCard\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PokemonCard","pokemon","borderColor","_s","color","setColor","showBorder","hideBorder","formatDate","date","getDate","getMonth","getFullYear","formatType","type","className","onMouseEnter","onMouseLeave","children","style","src","picture","alt","name","fileName","_jsxFileName","lineNumber","columnNumber","created","types","map","_c","$RefreshReg$"],"sources":["/var/www/html/REACT-POKEMONS-APP/src/components/pokemon-card.tsx"],"sourcesContent":["import React, { FunctionComponent, useState } from \"react\";\nimport Pokemon from \"../models/pokemon\";\nimport \"./pokemon-card.css\";\n\ntype Props = {\n  pokemon: Pokemon;\n  borderColor?: string;\n};\n\nconst PokemonCard: FunctionComponent<Props> = ({\n  pokemon,\n  borderColor = \"#009688\",\n}) => {\n  const [color, setColor] = useState<string>();\n\n  const showBorder = () => {\n    setColor(borderColor);\n  };\n\n  const hideBorder = () => {\n    setColor(\"#f5f5f5\");\n  };\n\n  const formatDate = (date: Date): string => {\n    return `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;\n  };\n\n  const formatType = (type: string): string => {\n    let color: string;\n\n    switch (type) {\n      case \"Feu\":\n        color = \"red lighten-1\";\n        break;\n      case \"Eau\":\n        color = \"blue lighten-1\";\n        break;\n      case \"Plante\":\n        color = \"green lighten-1\";\n        break;\n      case \"Insecte\":\n        color = \"brown lighten-1\";\n        break;\n      case \"Normal\":\n        color = \"grey lighten-3\";\n        break;\n      case \"Vol\":\n        color = \"blue lighten-3\";\n        break;\n      case \"Poison\":\n        color = \"deep-purple accent-1\";\n        break;\n      case \"Fée\":\n        color = \"pink lighten-4\";\n        break;\n      case \"Psy\":\n        color = \"deep-purple darken-2\";\n        break;\n      case \"Electrik\":\n        color = \"lime accent-1\";\n        break;\n      case \"Combat\":\n        color = \"deep-orange\";\n        break;\n      default:\n        color = \"grey\";\n        break;\n    }\n\n    return `chip ${color}`;\n  };\n\n  return (\n    <div\n      className=\"col s6 m4\"\n      onMouseEnter={showBorder}\n      onMouseLeave={hideBorder}\n    >\n      <div className=\"card horizontal\" style={{ borderColor: color }}>\n        <div className=\"card-image\">\n          <img src={pokemon.picture} alt={pokemon.name} />\n        </div>\n        <div className=\"card-stacked\">\n          <div className=\"card-content\">\n            <p>{pokemon.name}</p>\n            <p>\n              <small>{formatDate(pokemon.created)}</small>\n            </p>\n            {pokemon.types.map((type) => (\n              <span key={type} className={formatType(type)}>\n                {type}\n              </span>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PokemonCard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}